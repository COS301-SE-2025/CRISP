# Generated by Django 4.2.10 on 2025-05-27 09:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('alias', models.SlugField(unique=True)),
                ('can_read', models.BooleanField(default=True)),
                ('can_write', models.BooleanField(default=False)),
                ('media_types', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_anonymization', models.CharField(default='partial', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('sectors', models.JSONField(default=list)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stix_id', models.CharField(max_length=255, unique=True)),
                ('identity_class', models.CharField(default='organization', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='STIXObject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stix_id', models.CharField(max_length=255, unique=True)),
                ('stix_type', models.CharField(choices=[('indicator', 'Indicator'), ('malware', 'Malware'), ('attack-pattern', 'Attack Pattern'), ('threat-actor', 'Threat Actor'), ('identity', 'Identity'), ('relationship', 'Relationship'), ('tool', 'Tool'), ('vulnerability', 'Vulnerability'), ('observed-data', 'Observed Data'), ('report', 'Report'), ('course-of-action', 'Course of Action'), ('campaign', 'Campaign'), ('intrusion-set', 'Intrusion Set'), ('infrastructure', 'Infrastructure'), ('location', 'Location'), ('note', 'Note'), ('opinion', 'Opinion'), ('marking-definition', 'Marking Definition')], max_length=100)),
                ('spec_version', models.CharField(default='2.1', max_length=20)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('created_by_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('revoked', models.BooleanField(default=False)),
                ('labels', models.JSONField(default=list)),
                ('confidence', models.IntegerField(default=0)),
                ('external_references', models.JSONField(default=list)),
                ('object_marking_refs', models.JSONField(default=list)),
                ('granular_markings', models.JSONField(default=list)),
                ('raw_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('anonymized', models.BooleanField(default=False)),
                ('anonymization_strategy', models.CharField(blank=True, max_length=50, null=True)),
                ('original_object_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_stix_objects', to=settings.AUTH_USER_MODEL)),
                ('source_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stix_objects', to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('query_parameters', models.JSONField(default=dict)),
                ('update_interval', models.IntegerField(default=86400)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('archived', 'Archived')], default='active', max_length=20)),
                ('last_published', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feeds', to='core.collection')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_feeds', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CollectionObject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_objects', to='core.collection')),
                ('stix_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_references', to='core.stixobject')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_collections', to='core.organization'),
        ),
        migrations.AddIndex(
            model_name='stixobject',
            index=models.Index(fields=['stix_type'], name='core_stixob_stix_ty_2dce34_idx'),
        ),
        migrations.AddIndex(
            model_name='stixobject',
            index=models.Index(fields=['created'], name='core_stixob_created_26f121_idx'),
        ),
        migrations.AddIndex(
            model_name='stixobject',
            index=models.Index(fields=['modified'], name='core_stixob_modifie_36f639_idx'),
        ),
        migrations.AddIndex(
            model_name='stixobject',
            index=models.Index(fields=['created_by_ref'], name='core_stixob_created_c709a7_idx'),
        ),
        migrations.AddIndex(
            model_name='stixobject',
            index=models.Index(fields=['anonymized'], name='core_stixob_anonymi_b28775_idx'),
        ),
        migrations.AddIndex(
            model_name='collectionobject',
            index=models.Index(fields=['collection', 'stix_object'], name='core_collec_collect_e7dabc_idx'),
        ),
        migrations.AddIndex(
            model_name='collectionobject',
            index=models.Index(fields=['date_added'], name='core_collec_date_ad_aa32cf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collectionobject',
            unique_together={('collection', 'stix_object')},
        ),
    ]

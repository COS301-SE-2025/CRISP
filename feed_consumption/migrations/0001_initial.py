# Generated by Django 4.2.21 on 2025-05-27 21:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalFeedSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('discovery_url', models.URLField(help_text='TAXII 2.1 discovery endpoint URL')),
                ('api_root_url', models.URLField(blank=True, help_text='TAXII API Root URL (auto-populated from discovery)', null=True)),
                ('collection_id', models.CharField(blank=True, help_text='Selected TAXII collection ID', max_length=255, null=True)),
                ('collection_name', models.CharField(blank=True, max_length=255, null=True)),
                ('categories', models.JSONField(default=list, help_text="List of categories like ['malware', 'indicators', 'ttps']")),
                ('poll_interval', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=10)),
                ('auth_type', models.CharField(choices=[('none', 'None'), ('basic', 'Basic Authentication'), ('api_key', 'API Key'), ('jwt', 'JWT Token')], default='none', max_length=10)),
                ('auth_credentials', models.JSONField(blank=True, default=dict, help_text='Authentication credentials in JSON format')),
                ('headers', models.JSONField(blank=True, default=dict, help_text='Additional HTTP headers to include in API requests')),
                ('last_poll_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feed_sources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedConsumptionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('objects_processed', models.IntegerField(default=0)),
                ('objects_added', models.IntegerField(default=0)),
                ('objects_updated', models.IntegerField(default=0)),
                ('objects_failed', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('execution_time_seconds', models.FloatField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feed_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumption_logs', to='feed_consumption.externalfeedsource')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]

# Generated by Django 4.2.10 on 2025-09-18 18:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0004_alter_ttpdata_unique_together_alter_ttpdata_stix_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('feed_update', 'Feed Update'), ('threat_alert', 'Threat Alert'), ('user_invitation', 'User Invitation'), ('system_alert', 'System Alert'), ('trust_relationship', 'Trust Relationship'), ('security_alert', 'Security Alert')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.organization')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'crisp_notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read', 'created_at'], name='crisp_notif_recipie_d3aa97_idx'), models.Index(fields=['notification_type', 'created_at'], name='crisp_notif_notific_1c3d62_idx'), models.Index(fields=['organization', 'created_at'], name='crisp_notif_organiz_992a7c_idx'), models.Index(fields=['priority', 'created_at'], name='crisp_notif_priorit_839397_idx')],
            },
        ),
        migrations.CreateModel(
            name='FeedUpdateSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('notification_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest')], default='immediate', max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feed_subscriptions', to='core.organization')),
                ('threat_feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='core.threatfeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'crisp_feed_subscriptions',
                'indexes': [models.Index(fields=['user', 'is_active'], name='crisp_feed__user_id_fb2105_idx'), models.Index(fields=['threat_feed', 'is_active'], name='crisp_feed__threat__537cf1_idx'), models.Index(fields=['organization', 'is_active'], name='crisp_feed__organiz_60efcd_idx')],
                'unique_together': {('user', 'threat_feed', 'organization')},
            },
        ),
    ]

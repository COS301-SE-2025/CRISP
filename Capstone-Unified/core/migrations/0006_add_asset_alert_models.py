# Generated by Django 4.2.24 on 2025-09-22 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0005_add_indicator_sharing_relationship"),
    ]

    operations = [
        migrations.CreateModel(
            name="AssetInventory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable asset name", max_length=255
                    ),
                ),
                (
                    "asset_type",
                    models.CharField(
                        choices=[
                            ("ip_range", "IP Address Range"),
                            ("domain", "Domain Name"),
                            ("subdomain", "Subdomain"),
                            ("email_domain", "Email Domain"),
                            ("software", "Software/Application"),
                            ("hardware", "Hardware/Device"),
                            ("service", "Network Service"),
                            ("certificate", "SSL/TLS Certificate"),
                            ("cloud_resource", "Cloud Resource"),
                            ("network_segment", "Network Segment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "asset_value",
                    models.TextField(
                        help_text="Asset identifier (IP range, domain, etc.)"
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "criticality",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        help_text="Business criticality of this asset",
                        max_length=10,
                    ),
                ),
                (
                    "environment",
                    models.CharField(
                        default="production",
                        help_text="Environment (production, staging, development)",
                        max_length=50,
                    ),
                ),
                (
                    "fingerprints",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Computed fingerprints for threat correlation",
                    ),
                ),
                (
                    "alert_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to generate alerts for this asset",
                    ),
                ),
                (
                    "alert_channels",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Preferred alert delivery channels",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_assets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization that owns this asset",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asset_inventory",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "db_table": "core_asset_inventory",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CustomAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_id",
                    models.CharField(
                        help_text="Unique alert identifier", max_length=100, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                ("description", models.TextField()),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("threat_detected", "Threat Detected"),
                            ("asset_compromised", "Asset Compromised"),
                            ("infrastructure_targeted", "Infrastructure Targeted"),
                            ("campaign_detected", "Campaign Detected"),
                            ("ttp_matched", "TTP Matched"),
                            ("ioc_matched", "IoC Matched"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Informational"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.5,
                        help_text="Confidence score for this alert (0.0 to 1.0)",
                    ),
                ),
                (
                    "relevance_score",
                    models.FloatField(
                        default=0.5,
                        help_text="Relevance score based on asset criticality",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("acknowledged", "Acknowledged"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("false_positive", "False Positive"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "delivery_channels",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Channels used to deliver this alert",
                    ),
                ),
                (
                    "delivery_status",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Delivery status for each channel",
                    ),
                ),
                (
                    "response_actions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Recommended response actions",
                    ),
                ),
                (
                    "detected_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "affected_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users who should receive this alert",
                        related_name="received_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "matched_assets",
                    models.ManyToManyField(
                        help_text="Assets that matched this threat",
                        related_name="alerts",
                        to="core.assetinventory",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization receiving this alert",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_alerts",
                        to="core.organization",
                    ),
                ),
                (
                    "source_indicators",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Indicators that triggered this alert",
                        related_name="generated_alerts",
                        to="core.indicator",
                    ),
                ),
                (
                    "source_ttps",
                    models.ManyToManyField(
                        blank=True,
                        help_text="TTPs that triggered this alert",
                        related_name="generated_alerts",
                        to="core.ttpdata",
                    ),
                ),
            ],
            options={
                "db_table": "core_custom_alerts",
                "ordering": ["-detected_at"],
                "indexes": [
                    models.Index(
                        fields=["organization", "status", "severity"],
                        name="core_custom_organiz_ca3c9b_idx",
                    ),
                    models.Index(
                        fields=["alert_type", "detected_at"],
                        name="core_custom_alert_t_c0f54a_idx",
                    ),
                    models.Index(
                        fields=["status", "severity", "detected_at"],
                        name="core_custom_status_7bef45_idx",
                    ),
                    models.Index(
                        fields=["assigned_to", "status"],
                        name="core_custom_assigne_e89c22_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="assetinventory",
            index=models.Index(
                fields=["organization", "asset_type"],
                name="core_asset__organiz_a160f0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="assetinventory",
            index=models.Index(
                fields=["asset_type", "criticality"],
                name="core_asset__asset_t_d261fd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="assetinventory",
            index=models.Index(
                fields=["alert_enabled", "criticality"],
                name="core_asset__alert_e_5c0b7c_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="assetinventory",
            unique_together={("organization", "asset_value", "asset_type")},
        ),
    ]

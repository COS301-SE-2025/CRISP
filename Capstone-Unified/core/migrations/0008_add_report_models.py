# Generated by Django 4.2.10 on 2025-09-25 06:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0007_auto_20250924_1651'),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('report_type', models.CharField(choices=[('education_sector', 'Education Sector Analysis'), ('financial_sector', 'Financial Sector Analysis'), ('government_sector', 'Government Sector Analysis'), ('healthcare_sector', 'Healthcare Sector Analysis'), ('critical_infrastructure', 'Critical Infrastructure Analysis'), ('cross_sector', 'Cross-Sector Comparison'), ('asset_vulnerability', 'Asset Vulnerability Assessment'), ('asset_criticality', 'Asset Criticality Analysis'), ('infrastructure_coverage', 'Infrastructure Coverage Report'), ('ioc_trend', 'IoC Trend Analysis'), ('ttp_evolution', 'TTP Evolution Report'), ('threat_campaign', 'Threat Campaign Tracking'), ('feed_performance', 'Feed Performance Analysis'), ('trust_relationship', 'Trust Relationship Analysis'), ('trust_group', 'Trust Group Effectiveness'), ('information_sharing', 'Information Sharing Metrics'), ('alert_analysis', 'Alert Analysis Dashboard'), ('incident_response', 'Incident Response Metrics'), ('user_activity', 'User Activity Analysis'), ('system_performance', 'System Performance Report')], max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('parameters', models.JSONField(default=dict, help_text='Parameters used to generate this report (date ranges, filters, etc.)')),
                ('report_data', models.JSONField(default=dict, help_text='Complete report data including statistics, charts, and analysis')),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('error', 'Error'), ('archived', 'Archived')], default='generating', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('generation_duration', models.DurationField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False, help_text='Whether this report can be shared outside the organization')),
                ('available_formats', models.JSONField(default=list, help_text='List of formats this report can be exported to')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('export_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('analysis_start_date', models.DateTimeField(blank=True, help_text='Start date of data analyzed in this report', null=True)),
                ('analysis_end_date', models.DateTimeField(blank=True, help_text='End date of data analyzed in this report', null=True)),
                ('data_sources', models.JSONField(default=list, help_text='List of data sources used (indicators, ttps, trust_relationships, etc.)')),
                ('data_counts', models.JSONField(default=dict, help_text='Counts of data analyzed (indicators_count, ttps_count, etc.)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for report data', null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(help_text='Organization this report belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='core.organization')),
            ],
            options={
                'db_table': 'core_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_level', models.CharField(choices=[('view', 'View Only'), ('export', 'View and Export'), ('copy', 'View, Export, and Copy')], default='view', max_length=10)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('shared_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('share_message', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.report')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_reports_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'core_report_shares',
                'ordering': ['-shared_at'],
                'unique_together': {('report', 'organization')},
            },
        ),
        migrations.AddField(
            model_name='report',
            name='shared_with_organizations',
            field=models.ManyToManyField(blank=True, related_name='shared_reports', through='core.ReportShare', to='core.organization'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['organization', 'report_type', 'status'], name='core_report_organiz_464923_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_type', 'created_at'], name='core_report_report__a1c4f1_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['generated_by', 'status'], name='core_report_generat_ceee98_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['status', 'created_at'], name='core_report_status_302dd0_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['analysis_start_date', 'analysis_end_date'], name='core_report_analysi_a7c1cb_idx'),
        ),
    ]

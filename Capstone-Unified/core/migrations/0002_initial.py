# Generated by Django 4.2.10 on 2025-09-15 18:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="usersession",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sessions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userinvitation",
            name="accepted_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who accepted the invitation",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_accepted_invitations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userinvitation",
            name="inviter",
            field=models.ForeignKey(
                help_text="User who sent the invitation",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="core_sent_invitations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userinvitation",
            name="organization",
            field=models.ForeignKey(
                help_text="Organization extending the invitation",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="invitations",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="ttpdata",
            name="threat_feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ttps",
                to="core.threatfeed",
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="approved_by_source_user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who approved on behalf of source organization",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_trust_approvals_as_source",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="approved_by_target_user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who approved on behalf of target organization",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_trust_approvals_as_target",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this relationship",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_created_trust_relationships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="last_modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last modified this relationship",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_modified_trust_relationships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="revoked_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who revoked this relationship",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_revoked_trust_relationships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="source_organization",
            field=models.ForeignKey(
                help_text="Source organization in the trust relationship",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="core_trust_relationships_as_source",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="target_organization",
            field=models.ForeignKey(
                help_text="Target organization in the trust relationship",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="core_trust_relationships_as_target",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustrelationship",
            name="trust_level",
            field=models.ForeignKey(
                help_text="Trust level for this relationship",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trust_relationships",
                to="core.trustlevel",
            ),
        ),
        migrations.AddField(
            model_name="trustnetwork",
            name="members",
            field=models.ManyToManyField(
                related_name="trust_networks",
                through="core.NetworkMembership",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustlog",
            name="source_organization",
            field=models.ForeignKey(
                blank=True,
                help_text="Organization that initiated the action",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_trust_logs_as_source",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustlog",
            name="target_organization",
            field=models.ForeignKey(
                blank=True,
                help_text="Target organization (if applicable)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_trust_logs_as_target",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustlog",
            name="trust_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="trust_logs_as_user",
                to="core.trustgroup",
            ),
        ),
        migrations.AddField(
            model_name="trustlog",
            name="trust_relationship",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="trust_logs",
                to="core.trustrelationship",
            ),
        ),
        migrations.AddField(
            model_name="trustlog",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who performed the action",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_performed_trust_logs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="trustlevel",
            index=models.Index(fields=["level"], name="core_trustl_level_81bc6f_idx"),
        ),
        migrations.AddIndex(
            model_name="trustlevel",
            index=models.Index(
                fields=["numerical_value"], name="core_trustl_numeric_c21783_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustlevel",
            index=models.Index(
                fields=["is_active"], name="core_trustl_is_acti_6ab25b_idx"
            ),
        ),
        migrations.AddField(
            model_name="trustgroupmembership",
            name="organization",
            field=models.ForeignKey(
                help_text="Organization that is a member of this trust group",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="core_trust_group_memberships",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustgroupmembership",
            name="trust_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_memberships",
                to="core.trustgroup",
            ),
        ),
        migrations.AddField(
            model_name="trustgroup",
            name="default_trust_level",
            field=models.ForeignKey(
                help_text="Default trust level for group members",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_for_groups",
                to="core.trustlevel",
            ),
        ),
        migrations.AddField(
            model_name="trusteddevice",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devices",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="threatfeed",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_threat_feeds",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="systemactivity",
            name="indicator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.indicator",
            ),
        ),
        migrations.AddField(
            model_name="systemactivity",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="systemactivity",
            name="threat_feed",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.threatfeed",
            ),
        ),
        migrations.AddField(
            model_name="systemactivity",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="stixobject",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_stix_objects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="stixobject",
            name="source_organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stix_objects",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="passwordresettoken",
            name="user",
            field=models.ForeignKey(
                help_text="User requesting password reset",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="core_password_reset_tokens",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_organizations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="networkmembership",
            name="network",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.trustnetwork"
            ),
        ),
        migrations.AddField(
            model_name="networkmembership",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.organization"
            ),
        ),
        migrations.AddField(
            model_name="institution",
            name="organization",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="indicator",
            name="threat_feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="indicators",
                to="core.threatfeed",
            ),
        ),
        migrations.AddField(
            model_name="identity",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="identity",
            name="organization",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stix_identity",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="feed",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="feeds",
                to="core.collection",
            ),
        ),
        migrations.AddField(
            model_name="feed",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="feed",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="publication_feeds",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="feed",
            name="threat_feed",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="publication_feeds",
                to="core.threatfeed",
            ),
        ),
        migrations.AddField(
            model_name="collectionobject",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="collection_objects",
                to="core.collection",
            ),
        ),
        migrations.AddField(
            model_name="collectionobject",
            name="stix_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="collection_references",
                to="core.stixobject",
            ),
        ),
        migrations.AddField(
            model_name="collection",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_collections",
                to="core.organization",
            ),
        ),
        migrations.AddField(
            model_name="collection",
            name="stix_objects",
            field=models.ManyToManyField(
                related_name="collections",
                through="core.CollectionObject",
                to="core.stixobject",
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["user", "-created_at"], name="core_userse_user_id_819c57_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["is_active"], name="core_userse_is_acti_f7d7fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["expires_at"], name="core_userse_expires_c40d52_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userinvitation",
            index=models.Index(
                fields=["email", "status"], name="core_userin_email_38fae7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userinvitation",
            index=models.Index(
                fields=["organization", "status"], name="core_userin_organiz_bfbc15_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userinvitation",
            index=models.Index(fields=["token"], name="core_userin_token_3b265a_idx"),
        ),
        migrations.AddIndex(
            model_name="userinvitation",
            index=models.Index(
                fields=["expires_at"], name="core_userin_expires_f9c41d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userinvitation",
            unique_together={("email", "organization", "status")},
        ),
        migrations.AlterUniqueTogether(
            name="ttpdata",
            unique_together={("mitre_technique_id", "threat_feed")},
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["source_organization"], name="core_trustr_source__dd6c5d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["target_organization"], name="core_trustr_target__01f715_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(fields=["status"], name="core_trustr_status_ef3968_idx"),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["trust_level"], name="core_trustr_trust_l_0a5e2d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["is_active"], name="core_trustr_is_acti_4eedc9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["valid_from"], name="core_trustr_valid_f_b31430_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["valid_until"], name="core_trustr_valid_u_4e8e35_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trustrelationship",
            unique_together={("source_organization", "target_organization")},
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["action", "-timestamp"], name="core_trustl_action_df7bb7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["source_organization", "-timestamp"],
                name="core_trustl_source__393f8c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["target_organization", "-timestamp"],
                name="core_trustl_target__a3670d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["user", "-timestamp"], name="core_trustl_user_id_2799a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["success", "-timestamp"], name="core_trustl_success_29abd6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroupmembership",
            index=models.Index(
                fields=["organization"], name="core_trustg_organiz_d46c83_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroupmembership",
            index=models.Index(
                fields=["is_active"], name="core_trustg_is_acti_3316d7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trustgroupmembership",
            unique_together={("trust_group", "organization")},
        ),
        migrations.AddIndex(
            model_name="trustgroup",
            index=models.Index(
                fields=["group_type"], name="core_trustg_group_t_0962c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroup",
            index=models.Index(
                fields=["is_public"], name="core_trustg_is_publ_f78ae8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroup",
            index=models.Index(
                fields=["is_active"], name="core_trustg_is_acti_a012dd_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trusteddevice",
            unique_together={("user", "device_fingerprint")},
        ),
        migrations.AddIndex(
            model_name="stixobject",
            index=models.Index(
                fields=["stix_type"], name="core_stixob_stix_ty_2dce34_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stixobject",
            index=models.Index(
                fields=["created"], name="core_stixob_created_26f121_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stixobject",
            index=models.Index(
                fields=["modified"], name="core_stixob_modifie_36f639_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stixobject",
            index=models.Index(
                fields=["created_by_ref"], name="core_stixob_created_c709a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stixobject",
            index=models.Index(
                fields=["anonymized"], name="core_stixob_anonymi_b28775_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="passwordresettoken",
            index=models.Index(
                fields=["user", "expires_at"], name="core_passwo_user_id_23a33a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="passwordresettoken",
            index=models.Index(fields=["token"], name="core_passwo_token_95f98a_idx"),
        ),
        migrations.AddIndex(
            model_name="passwordresettoken",
            index=models.Index(
                fields=["created_at"], name="core_passwo_created_c4aa98_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["domain"], name="core_organi_domain_075917_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["is_active"], name="core_organi_is_acti_9518a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["is_publisher"], name="core_organi_is_publ_9e5ebe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["organization_type"], name="core_organi_organiz_58eb74_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["is_verified"], name="core_organi_is_veri_ef39a3_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="networkmembership",
            unique_together={("organization", "network")},
        ),
        migrations.AlterUniqueTogether(
            name="indicator",
            unique_together={("value", "type", "threat_feed")},
        ),
        migrations.AlterUniqueTogether(
            name="feed",
            unique_together={("alias", "organization")},
        ),
        migrations.AddIndex(
            model_name="collectionobject",
            index=models.Index(
                fields=["collection", "stix_object"],
                name="core_collec_collect_e7dabc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="collectionobject",
            index=models.Index(
                fields=["date_added"], name="core_collec_date_ad_aa32cf_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="collectionobject",
            unique_together={("collection", "stix_object")},
        ),
    ]

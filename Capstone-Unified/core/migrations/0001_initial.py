# Generated by Django 4.2.23 on 2025-08-10 09:50

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("alias", models.SlugField(unique=True)),
                ("can_read", models.BooleanField(default=True)),
                ("can_write", models.BooleanField(default=False)),
                ("media_types", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "default_anonymization_level",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("full", "Full"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CollectionObject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Feed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("alias", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("status", models.CharField(max_length=50)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "anonymization_level",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Identity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stix_id", models.CharField(max_length=255, unique=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("identity_class", models.CharField(max_length=100)),
                ("raw_data", models.TextField()),
            ],
            options={
                "verbose_name_plural": "Identities",
                "ordering": ["-modified"],
            },
        ),
        migrations.CreateModel(
            name="Indicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("ip", "IP Address"),
                            ("domain", "Domain"),
                            ("url", "URL"),
                            ("file_hash", "File Hash"),
                            ("email", "Email Address"),
                            ("user_agent", "User Agent"),
                            ("registry", "Registry Key"),
                            ("mutex", "Mutex"),
                            ("process", "Process"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "hash_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("md5", "MD5"),
                            ("sha1", "SHA1"),
                            ("sha256", "SHA256"),
                            ("sha512", "SHA512"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("confidence", models.IntegerField(default=50)),
                ("stix_id", models.CharField(max_length=255, unique=True)),
                ("first_seen", models.DateTimeField()),
                ("last_seen", models.DateTimeField()),
                ("is_anonymized", models.BooleanField(default=False)),
                ("original_value", models.TextField(blank=True, null=True)),
                (
                    "anonymization_method",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "indicators",
                "ordering": ["-last_seen"],
            },
        ),
        migrations.CreateModel(
            name="Institution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("contact_email", models.EmailField(max_length=254)),
                ("contact_name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "institutions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NetworkMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "membership_level",
                    models.CharField(
                        choices=[
                            ("full", "Full Member"),
                            ("associate", "Associate Member"),
                            ("observer", "Observer"),
                        ],
                        max_length=50,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "identity_class",
                    models.CharField(default="organization", max_length=100),
                ),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("university", "University"),
                            ("college", "College"),
                            ("school", "School"),
                            ("government", "Government"),
                            ("commercial", "Commercial"),
                            ("research", "Research Institution"),
                            ("ngo", "Non-Governmental Organization"),
                        ],
                        default="university",
                        max_length=50,
                    ),
                ),
                ("sectors", models.JSONField(blank=True, default=list, null=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("website", models.URLField(blank=True, null=True)),
                ("domain", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "stix_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this organization is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="STIXObject",
            name="STIXObject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("stix_id", models.CharField(max_length=255, unique=True)),
                (
                    "stix_type",
                    models.CharField(
                        choices=[
                            ("indicator", "Indicator"),
                            ("malware", "Malware"),
                            ("attack-pattern", "Attack Pattern"),
                            ("threat-actor", "Threat Actor"),
                            ("identity", "Identity"),
                            ("relationship", "Relationship"),
                            ("tool", "Tool"),
                            ("vulnerability", "Vulnerability"),
                            ("observed-data", "Observed Data"),
                            ("report", "Report"),
                            ("course-of-action", "Course of Action"),
                            ("campaign", "Campaign"),
                            ("intrusion-set", "Intrusion Set"),
                            ("infrastructure", "Infrastructure"),
                            ("location", "Location"),
                            ("note", "Note"),
                            ("opinion", "Opinion"),
                            ("marking-definition", "Marking Definition"),
                        ],
                        max_length=100,
                    ),
                ),
                ("spec_version", models.CharField(default="2.1", max_length=20)),
                ("created", models.DateTimeField()),
                ("modified", models.DateTimeField()),
                (
                    "created_by_ref",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("revoked", models.BooleanField(default=False)),
                ("labels", models.JSONField(default=list)),
                ("confidence", models.IntegerField(default=0)),
                ("external_references", models.JSONField(default=list)),
                ("object_marking_refs", models.JSONField(default=list)),
                ("granular_markings", models.JSONField(default=list)),
                ("raw_data", models.JSONField()),
                ("original_data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("anonymized", models.BooleanField(default=False)),
                (
                    "anonymization_strategy",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("anonymization_trust_level", models.FloatField(blank=True, null=True)),
                (
                    "original_object_ref",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("stix_id", models.CharField(max_length=255, unique=True)),
                (
                    "stix_type",
                    models.CharField(
                        choices=[
                            ("indicator", "Indicator"),
                            ("malware", "Malware"),
                            ("attack-pattern", "Attack Pattern"),
                            ("threat-actor", "Threat Actor"),
                            ("identity", "Identity"),
                            ("relationship", "Relationship"),
                            ("tool", "Tool"),
                            ("vulnerability", "Vulnerability"),
                            ("observed-data", "Observed Data"),
                            ("report", "Report"),
                            ("course-of-action", "Course of Action"),
                            ("campaign", "Campaign"),
                            ("intrusion-set", "Intrusion Set"),
                            ("infrastructure", "Infrastructure"),
                            ("location", "Location"),
                            ("note", "Note"),
                            ("opinion", "Opinion"),
                            ("marking-definition", "Marking Definition"),
                        ],
                        max_length=100,
                    ),
                ),
                ("spec_version", models.CharField(default="2.1", max_length=20)),
                ("created", models.DateTimeField()),
                ("modified", models.DateTimeField()),
                (
                    "created_by_ref",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("revoked", models.BooleanField(default=False)),
                ("labels", models.JSONField(default=list)),
                ("confidence", models.IntegerField(default=0)),
                ("external_references", models.JSONField(default=list)),
                ("object_marking_refs", models.JSONField(default=list)),
                ("granular_markings", models.JSONField(default=list)),
                ("raw_data", models.JSONField()),
                ("original_data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("anonymized", models.BooleanField(default=False)),
                (
                    "anonymization_strategy",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("anonymization_trust_level", models.FloatField(blank=True, null=True)),
                (
                    "original_object_ref",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ThreatFeed",
            name="ThreatFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("taxii_server_url", models.URLField(blank=True, null=True)),
                (
                    "taxii_api_root",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "taxii_collection_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "taxii_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "taxii_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_external", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("sync_interval_hours", models.IntegerField(default=24)),
                ("is_active", models.BooleanField(default=True)),
                ("last_error", models.TextField(blank=True, null=True)),
                ("sync_count", models.IntegerField(default=0)),
                ("last_published_time", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_threat_feeds",
                        to="core.organization",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("taxii_server_url", models.URLField(blank=True, null=True)),
                (
                    "taxii_api_root",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "taxii_collection_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "taxii_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "taxii_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_external", models.BooleanField(default=True)),
                ("is_public", models.BooleanField(default=False)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("sync_interval_hours", models.IntegerField(default=24)),
                ("is_active", models.BooleanField(default=True)),
                ("last_error", models.TextField(blank=True, null=True)),
                ("sync_count", models.IntegerField(default=0)),
                ("last_published_time", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_threat_feeds",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TrustLevel",
            name="TrustLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("level", models.FloatField(default=0.0)),
                ("numerical_value", models.IntegerField(default=50, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("level", models.FloatField(default=0.0)),
                ("numerical_value", models.IntegerField(default=50, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-numerical_value"],
                "ordering": ["-numerical_value"],
            },
        ),
        migrations.CreateModel(
            name="TTPData",
            name="TTPData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("mitre_technique_id", models.CharField(max_length=20)),
                (
                    "mitre_tactic",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("reconnaissance", "Reconnaissance"),
                            ("resource_development", "Resource Development"),
                            ("initial_access", "Initial Access"),
                            ("execution", "Execution"),
                            ("persistence", "Persistence"),
                            ("privilege_escalation", "Privilege Escalation"),
                            ("defense_evasion", "Defense Evasion"),
                            ("credential_access", "Credential Access"),
                            ("discovery", "Discovery"),
                            ("lateral_movement", "Lateral Movement"),
                            ("collection", "Collection"),
                            ("command_and_control", "Command and Control"),
                            ("exfiltration", "Exfiltration"),
                            ("impact", "Impact"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "mitre_subtechnique",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("stix_id", models.CharField(max_length=255, unique=True)),
                ("is_anonymized", models.BooleanField(default=False)),
                ("original_data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "threat_feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ttps",
                        to="core.threatfeed",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("mitre_technique_id", models.CharField(max_length=20)),
                (
                    "mitre_tactic",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("reconnaissance", "Reconnaissance"),
                            ("resource_development", "Resource Development"),
                            ("initial_access", "Initial Access"),
                            ("execution", "Execution"),
                            ("persistence", "Persistence"),
                            ("privilege_escalation", "Privilege Escalation"),
                            ("defense_evasion", "Defense Evasion"),
                            ("credential_access", "Credential Access"),
                            ("discovery", "Discovery"),
                            ("lateral_movement", "Lateral Movement"),
                            ("collection", "Collection"),
                            ("command_and_control", "Command and Control"),
                            ("exfiltration", "Exfiltration"),
                            ("impact", "Impact"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "mitre_subtechnique",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("stix_id", models.CharField(max_length=255, unique=True)),
                ("is_anonymized", models.BooleanField(default=False)),
                ("original_data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "threat_feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ttps",
                        to="core.threatfeed",
                    ),
                ),
            ],
            options={
                "db_table": "ttp_data",
                "ordering": ["mitre_technique_id"],
            },
        ),
        migrations.CreateModel(
            name="TrustRelationship",
            name="TrustRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("partnership", "Partnership"),
                            ("vendor", "Vendor Relationship"),
                            ("educational", "Educational Partnership"),
                            ("research", "Research Collaboration"),
                            ("institutional", "Institutional Trust"),
                            ("government", "Government Agency"),
                        ],
                        default="partnership",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_by", models.CharField(default="System", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "source_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships_as_source",
                        to="core.organization",
                    ),
                ),
                (
                    "target_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships_as_target",
                        to="core.organization",
                    ),
                ),
                (
                    "trust_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.trustlevel",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("partnership", "Partnership"),
                            ("vendor", "Vendor Relationship"),
                            ("educational", "Educational Partnership"),
                            ("research", "Research Collaboration"),
                            ("institutional", "Institutional Trust"),
                            ("government", "Government Agency"),
                        ],
                        default="partnership",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_by", models.CharField(default="System", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "source_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships_as_source",
                        to="core.organization",
                    ),
                ),
                (
                    "target_organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships_as_target",
                        to="core.organization",
                    ),
                ),
                (
                    "trust_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.trustlevel",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TrustNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("default_trust_level", models.FloatField(default=0.6)),
                (
                    "default_anonymization_level",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("full", "Full"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="trust_networks",
                        through="core.NetworkMembership",
                        to="core.organization",
                    ),
                ),
            ],
        migrations.CreateModel(
            name="TrustNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("default_trust_level", models.FloatField(default=0.6)),
                (
                    "default_anonymization_level",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("full", "Full"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="trust_networks",
                        through="core.NetworkMembership",
                        to="core.organization",
                    ),
                ),
            ],
        ),
    ]

# Generated by Django 4.2.10 on 2025-09-25 05:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0007_auto_20250924_1651'),
    ]

    operations = [
        migrations.CreateModel(
            name='SOCCase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('case_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('closed', 'Closed')], default='open', max_length=20)),
                ('opened_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.JSONField(default=list)),
                ('metadata', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_cases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'soc_case',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SOCIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('incident_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('malware', 'Malware'), ('phishing', 'Phishing'), ('data_breach', 'Data Breach'), ('unauthorized_access', 'Unauthorized Access'), ('ddos', 'DDoS Attack'), ('insider_threat', 'Insider Threat'), ('ransomware', 'Ransomware'), ('apt', 'Advanced Persistent Threat'), ('vulnerability', 'Vulnerability'), ('policy_violation', 'Policy Violation'), ('other', 'Other')], max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('severity', models.CharField(choices=[('informational', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('new', 'New'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('false_positive', 'False Positive')], default='new', max_length=20)),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('sla_deadline', models.DateTimeField(blank=True, null=True)),
                ('is_sla_breached', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(blank=True, help_text='Source of incident (manual, alert, etc.)', max_length=100)),
                ('external_ticket_id', models.CharField(blank=True, max_length=100)),
                ('tags', models.JSONField(default=list)),
                ('metadata', models.JSONField(default=dict)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_incidents', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soc_incidents', to='core.organization')),
            ],
            options={
                'db_table': 'soc_incident',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SOCPlaybook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('playbook_type', models.CharField(choices=[('malware', 'Malware Response'), ('phishing', 'Phishing Response'), ('data_breach', 'Data Breach Response'), ('ddos', 'DDoS Response'), ('insider_threat', 'Insider Threat Response'), ('ransomware', 'Ransomware Response'), ('apt', 'APT Response'), ('custom', 'Custom Playbook')], max_length=50)),
                ('description', models.TextField()),
                ('steps', models.JSONField(default=list, help_text='List of playbook steps')),
                ('automation_rules', models.JSONField(default=dict, help_text='Automation configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_playbooks', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soc_playbooks', to='core.organization')),
            ],
            options={
                'db_table': 'soc_playbook',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SOCIncidentActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('created', 'Incident Created'), ('assigned', 'Assignment Changed'), ('status_change', 'Status Changed'), ('priority_change', 'Priority Changed'), ('comment', 'Comment Added'), ('evidence', 'Evidence Added'), ('playbook_executed', 'Playbook Executed'), ('closed', 'Incident Closed')], max_length=50)),
                ('description', models.TextField()),
                ('details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='soc.socincident')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'soc_incident_activity',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='socincident',
            name='playbook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='soc.socplaybook'),
        ),
        migrations.AddField(
            model_name='socincident',
            name='related_assets',
            field=models.ManyToManyField(blank=True, related_name='soc_incidents', to='core.assetinventory'),
        ),
        migrations.AddField(
            model_name='socincident',
            name='related_indicators',
            field=models.ManyToManyField(blank=True, related_name='soc_incidents', to='core.indicator'),
        ),
        migrations.AddField(
            model_name='socincident',
            name='related_ttps',
            field=models.ManyToManyField(blank=True, related_name='soc_incidents', to='core.ttpdata'),
        ),
        migrations.CreateModel(
            name='SOCEvidence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('evidence_type', models.CharField(choices=[('file', 'File'), ('log', 'Log Entry'), ('screenshot', 'Screenshot'), ('network_capture', 'Network Capture'), ('memory_dump', 'Memory Dump'), ('artifact', 'Digital Artifact'), ('document', 'Document'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('collected_at', models.DateTimeField(auto_now_add=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_hash', models.CharField(blank=True, max_length=128)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('tags', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='soc.soccase')),
                ('collected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collected_evidence', to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='soc.socincident')),
            ],
            options={
                'db_table': 'soc_evidence',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='soccase',
            name='incidents',
            field=models.ManyToManyField(blank=True, related_name='cases', to='soc.socincident'),
        ),
        migrations.AddField(
            model_name='soccase',
            name='investigators',
            field=models.ManyToManyField(blank=True, related_name='investigating_cases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='soccase',
            name='lead_investigator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leading_cases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='soccase',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soc_cases', to='core.organization'),
        ),
        migrations.CreateModel(
            name='SOCMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('incidents_created', models.IntegerField(default=0)),
                ('incidents_resolved', models.IntegerField(default=0)),
                ('incidents_closed', models.IntegerField(default=0)),
                ('mean_time_to_response', models.FloatField(blank=True, null=True)),
                ('mean_time_to_resolution', models.FloatField(blank=True, null=True)),
                ('sla_breaches', models.IntegerField(default=0)),
                ('false_positives', models.IntegerField(default=0)),
                ('additional_metrics', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soc_metrics', to='core.organization')),
            ],
            options={
                'db_table': 'soc_metrics',
                'ordering': ['-date'],
                'unique_together': {('organization', 'date', 'period_type')},
            },
        ),
        migrations.AddIndex(
            model_name='socincident',
            index=models.Index(fields=['incident_id'], name='soc_inciden_inciden_479d09_idx'),
        ),
        migrations.AddIndex(
            model_name='socincident',
            index=models.Index(fields=['status', 'priority'], name='soc_inciden_status_eddbee_idx'),
        ),
        migrations.AddIndex(
            model_name='socincident',
            index=models.Index(fields=['organization', 'status'], name='soc_inciden_organiz_4bf182_idx'),
        ),
        migrations.AddIndex(
            model_name='socincident',
            index=models.Index(fields=['assigned_to', 'status'], name='soc_inciden_assigne_e0881d_idx'),
        ),
    ]

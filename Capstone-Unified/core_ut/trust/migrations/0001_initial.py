# Generated by Django 4.2.10 on 2025-08-12 22:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("user_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SharingPolicy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the sharing policy",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of what this policy controls"
                    ),
                ),
                (
                    "allowed_stix_types",
                    models.JSONField(
                        default=list,
                        help_text="List of STIX object types that can be shared",
                    ),
                ),
                (
                    "blocked_stix_types",
                    models.JSONField(
                        default=list,
                        help_text="List of STIX object types that are blocked",
                    ),
                ),
                (
                    "allowed_indicator_types",
                    models.JSONField(
                        default=list,
                        help_text="List of indicator types that can be shared",
                    ),
                ),
                (
                    "blocked_indicator_types",
                    models.JSONField(
                        default=list,
                        help_text="List of indicator types that are blocked",
                    ),
                ),
                (
                    "max_tlp_level",
                    models.CharField(
                        choices=[
                            ("white", "TLP:WHITE"),
                            ("green", "TLP:GREEN"),
                            ("amber", "TLP:AMBER"),
                            ("red", "TLP:RED"),
                        ],
                        default="green",
                        help_text="Maximum TLP level that can be shared",
                        max_length=20,
                    ),
                ),
                (
                    "max_age_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum age of intelligence that can be shared (in days)",
                        null=True,
                    ),
                ),
                (
                    "require_anonymization",
                    models.BooleanField(
                        default=True, help_text="Whether anonymization is required"
                    ),
                ),
                (
                    "anonymization_rules",
                    models.JSONField(
                        default=dict, help_text="Specific anonymization rules to apply"
                    ),
                ),
                (
                    "allow_attribution",
                    models.BooleanField(
                        default=False,
                        help_text="Whether attribution to source organization is allowed",
                    ),
                ),
                (
                    "additional_constraints",
                    models.JSONField(
                        default=dict, help_text="Additional policy constraints"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this policy is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.CharField(
                        help_text="User who created this policy", max_length=255
                    ),
                ),
            ],
            options={
                "verbose_name": "Sharing Policy",
                "verbose_name_plural": "Sharing Policies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TrustGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the trust group", max_length=255, unique=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the trust group's purpose"
                    ),
                ),
                (
                    "group_type",
                    models.CharField(
                        default="community",
                        help_text="Type of trust group (sector, geography, purpose, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether organizations can request to join publicly",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=True, help_text="Whether membership requires approval"
                    ),
                ),
                (
                    "group_policies",
                    models.JSONField(
                        default=dict,
                        help_text="Group-specific sharing and access policies",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this trust group is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.CharField(
                        help_text="Organization that created this group", max_length=255
                    ),
                ),
                (
                    "administrators",
                    models.JSONField(
                        default=list,
                        help_text="List of organization IDs that can administer this group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trust Group",
                "verbose_name_plural": "Trust Groups",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TrustGroupMembership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "membership_type",
                    models.CharField(
                        choices=[
                            ("member", "Member"),
                            ("administrator", "Administrator"),
                            ("moderator", "Moderator"),
                        ],
                        default="member",
                        help_text="Type of membership in the group",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this membership is active"
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "left_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the organization left the group",
                        null=True,
                    ),
                ),
                (
                    "invited_by",
                    models.CharField(
                        blank=True,
                        help_text="Organization that invited this member",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "approved_by",
                    models.CharField(
                        blank=True,
                        help_text="Administrator who approved this membership",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trust Group Membership",
                "verbose_name_plural": "Trust Group Memberships",
                "ordering": ["-joined_at"],
            },
        ),
        migrations.CreateModel(
            name="TrustLevel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for this trust level",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("public", "Public Trust"),
                            ("trusted", "Trusted Trust"),
                            ("restricted", "Restricted Trust"),
                        ],
                        help_text="Standard trust level classification",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of what this trust level means"
                    ),
                ),
                (
                    "numerical_value",
                    models.IntegerField(
                        help_text="Numerical representation for comparison (0-100)"
                    ),
                ),
                (
                    "default_anonymization_level",
                    models.CharField(
                        choices=[
                            ("none", "No Anonymization"),
                            ("minimal", "Minimal Anonymization"),
                            ("partial", "Partial Anonymization"),
                            ("full", "Full Anonymization"),
                            ("custom", "Custom Anonymization"),
                        ],
                        default="partial",
                        help_text="Default anonymization level for this trust level",
                        max_length=20,
                    ),
                ),
                (
                    "default_access_level",
                    models.CharField(
                        choices=[
                            ("none", "No Access"),
                            ("read", "Read Only"),
                            ("subscribe", "Subscribe to Feeds"),
                            ("contribute", "Contribute Intelligence"),
                            ("full", "Full Access"),
                        ],
                        default="read",
                        help_text="Default access level for this trust level",
                        max_length=20,
                    ),
                ),
                (
                    "sharing_policies",
                    models.JSONField(
                        default=dict,
                        help_text="Detailed sharing policies and restrictions",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this trust level is currently active",
                    ),
                ),
                (
                    "is_system_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a system default trust level",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.CharField(
                        help_text="System user who created this trust level",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trust Level",
                "verbose_name_plural": "Trust Levels",
                "ordering": ["numerical_value"],
            },
        ),
        migrations.CreateModel(
            name="TrustRelationship",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("bilateral", "Bilateral Trust"),
                            ("community", "Community Trust"),
                            ("hierarchical", "Hierarchical Trust"),
                            ("federation", "Federation Trust"),
                        ],
                        default="bilateral",
                        help_text="Type of trust relationship",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("suspended", "Suspended"),
                            ("revoked", "Revoked"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        help_text="Current status of the trust relationship",
                        max_length=20,
                    ),
                ),
                (
                    "is_bilateral",
                    models.BooleanField(
                        default=True,
                        help_text="Whether trust is mutual (both directions)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this relationship is currently active",
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this trust relationship becomes valid",
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this trust relationship expires (null = never)",
                        null=True,
                    ),
                ),
                (
                    "sharing_preferences",
                    models.JSONField(
                        default=dict,
                        help_text="Organization-specific sharing preferences",
                    ),
                ),
                (
                    "anonymization_level",
                    models.CharField(
                        choices=[
                            ("none", "No Anonymization"),
                            ("minimal", "Minimal Anonymization"),
                            ("partial", "Partial Anonymization"),
                            ("full", "Full Anonymization"),
                            ("custom", "Custom Anonymization"),
                        ],
                        help_text="Level of anonymization to apply",
                        max_length=20,
                    ),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("none", "No Access"),
                            ("read", "Read Only"),
                            ("subscribe", "Subscribe to Feeds"),
                            ("contribute", "Contribute Intelligence"),
                            ("full", "Full Access"),
                        ],
                        default="read",
                        help_text="Access level granted by this relationship",
                        max_length=20,
                    ),
                ),
                (
                    "approved_by_source",
                    models.BooleanField(
                        default=False,
                        help_text="Whether source organization has approved",
                    ),
                ),
                (
                    "approved_by_target",
                    models.BooleanField(
                        default=False,
                        help_text="Whether target organization has approved",
                    ),
                ),
                (
                    "source_approval_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "target_approval_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Additional metadata about the relationship",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notes about this trust relationship"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "activated_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this relationship was activated",
                        null=True,
                    ),
                ),
                (
                    "revoked_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this relationship was revoked",
                        null=True,
                    ),
                ),
                (
                    "approved_by_source_user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who approved on behalf of source organization",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trust_approvals_as_source",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "approved_by_target_user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who approved on behalf of target organization",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trust_approvals_as_target",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this relationship",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_trust_relationships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified this relationship",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_trust_relationships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "revoked_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who revoked this relationship",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="revoked_trust_relationships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_organization",
                    models.ForeignKey(
                        help_text="Source organization in the trust relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships_as_source",
                        to="user_management.organization",
                    ),
                ),
                (
                    "target_organization",
                    models.ForeignKey(
                        help_text="Target organization in the trust relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships_as_target",
                        to="user_management.organization",
                    ),
                ),
                (
                    "trust_group",
                    models.ForeignKey(
                        blank=True,
                        help_text="Trust group if this is a community relationship",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_relationships",
                        to="trust.trustgroup",
                    ),
                ),
                (
                    "trust_level",
                    models.ForeignKey(
                        help_text="Trust level for this relationship",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_relationships",
                        to="trust.trustlevel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trust Relationship",
                "verbose_name_plural": "Trust Relationships",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TrustLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("relationship_created", "Trust Relationship Created"),
                            ("relationship_approved", "Trust Relationship Approved"),
                            ("relationship_activated", "Trust Relationship Activated"),
                            ("relationship_suspended", "Trust Relationship Suspended"),
                            ("relationship_revoked", "Trust Relationship Revoked"),
                            ("relationship_modified", "Trust Relationship Modified"),
                            ("group_created", "Trust Group Created"),
                            ("group_modified", "Trust Group Modified"),
                            ("group_joined", "Joined Trust Group"),
                            ("group_left", "Left Trust Group"),
                            ("access_granted", "Access Granted"),
                            ("access_denied", "Access Denied"),
                            ("intelligence_shared", "Intelligence Shared"),
                            ("intelligence_accessed", "Intelligence Accessed"),
                            ("trust_level_modified", "Trust Level Modified"),
                        ],
                        help_text="Type of trust action performed",
                        max_length=50,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which action was performed",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, help_text="User agent string", null=True
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True, help_text="Whether the action was successful"
                    ),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True,
                        help_text="Reason for failure if action was unsuccessful",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "details",
                    models.JSONField(
                        default=dict, help_text="Additional details about the action"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Additional metadata about the log entry",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "source_organization",
                    models.ForeignKey(
                        blank=True,
                        help_text="Organization that initiated the action",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trust_logs_as_source",
                        to="user_management.organization",
                    ),
                ),
                (
                    "target_organization",
                    models.ForeignKey(
                        blank=True,
                        help_text="Target organization (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trust_logs_as_target",
                        to="user_management.organization",
                    ),
                ),
                (
                    "trust_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trust_logs_as_user",
                        to="trust.trustgroup",
                    ),
                ),
                (
                    "trust_relationship",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trust_logs",
                        to="trust.trustrelationship",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who performed the action",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="performed_trust_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Trust Log",
                "verbose_name_plural": "Trust Logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="trustlevel",
            index=models.Index(fields=["level"], name="trust_trust_level_2e1b62_idx"),
        ),
        migrations.AddIndex(
            model_name="trustlevel",
            index=models.Index(
                fields=["numerical_value"], name="trust_trust_numeric_22befe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustlevel",
            index=models.Index(
                fields=["is_active"], name="trust_trust_is_acti_70e94b_idx"
            ),
        ),
        migrations.AddField(
            model_name="trustgroupmembership",
            name="organization",
            field=models.ForeignKey(
                help_text="Organization that is a member of this trust group",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trust_group_memberships",
                to="user_management.organization",
            ),
        ),
        migrations.AddField(
            model_name="trustgroupmembership",
            name="trust_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_memberships",
                to="trust.trustgroup",
            ),
        ),
        migrations.AddField(
            model_name="trustgroup",
            name="default_trust_level",
            field=models.ForeignKey(
                help_text="Default trust level for group members",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="default_for_groups",
                to="trust.trustlevel",
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["source_organization"], name="trust_trust_source__9eceb2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["target_organization"], name="trust_trust_target__10f9a5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(fields=["status"], name="trust_trust_status_e33fa5_idx"),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["trust_level"], name="trust_trust_trust_l_64cad0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["is_active"], name="trust_trust_is_acti_f1a7fe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["valid_from"], name="trust_trust_valid_f_cbbc76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustrelationship",
            index=models.Index(
                fields=["valid_until"], name="trust_trust_valid_u_a07fc8_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trustrelationship",
            unique_together={("source_organization", "target_organization")},
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["action", "-timestamp"], name="trust_trust_action_2c2930_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["source_organization", "-timestamp"],
                name="trust_trust_source__da2439_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["target_organization", "-timestamp"],
                name="trust_trust_target__84a07c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["user", "-timestamp"], name="trust_trust_user_id_448412_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustlog",
            index=models.Index(
                fields=["success", "-timestamp"], name="trust_trust_success_06bf9e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroupmembership",
            index=models.Index(
                fields=["organization"], name="trust_trust_organiz_45b49a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroupmembership",
            index=models.Index(
                fields=["is_active"], name="trust_trust_is_acti_c77aa4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="trustgroupmembership",
            unique_together={("trust_group", "organization")},
        ),
        migrations.AddIndex(
            model_name="trustgroup",
            index=models.Index(
                fields=["group_type"], name="trust_trust_group_t_848de0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroup",
            index=models.Index(
                fields=["is_public"], name="trust_trust_is_publ_afce9a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trustgroup",
            index=models.Index(
                fields=["is_active"], name="trust_trust_is_acti_adc207_idx"
            ),
        ),
    ]

# Generated by Django 4.2.10 on 2025-08-12 20:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('user_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text='Email address of the invitee', max_length=255)),
                ('invited_role', models.CharField(choices=[('viewer', 'Viewer'), ('publisher', 'Publisher')], default='viewer', help_text='Role the invitee will have in the organization', max_length=20)),
                ('token', models.CharField(help_text='Secure token for invitation acceptance', max_length=255, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the invitation', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this invitation expires')),
                ('accepted_at', models.DateTimeField(blank=True, help_text='When the invitation was accepted', null=True)),
                ('message', models.TextField(blank=True, help_text='Optional message from the inviter')),
                ('accepted_by', models.ForeignKey(blank=True, help_text='User who accepted the invitation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_invitations', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(help_text='User who sent the invitation', on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(help_text='Organization extending the invitation', on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='user_management.organization')),
            ],
            options={
                'verbose_name': 'User Invitation',
                'verbose_name_plural': 'User Invitations',
                'db_table': 'user_invitations',
                'indexes': [models.Index(fields=['email', 'status'], name='user_invita_email_698bcc_idx'), models.Index(fields=['organization', 'status'], name='user_invita_organiz_129c45_idx'), models.Index(fields=['token'], name='user_invita_token_59cb54_idx'), models.Index(fields=['expires_at'], name='user_invita_expires_26d966_idx')],
                'unique_together': {('email', 'organization', 'status')},
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(help_text='Secure reset token', max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this token expires')),
                ('used_at', models.DateTimeField(blank=True, help_text='When the token was used', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address that requested the reset', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent of the request')),
                ('user', models.ForeignKey(help_text='User requesting password reset', on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Password Reset Token',
                'verbose_name_plural': 'Password Reset Tokens',
                'db_table': 'password_reset_tokens',
                'indexes': [models.Index(fields=['user', 'expires_at'], name='password_re_user_id_13cacb_idx'), models.Index(fields=['token'], name='password_re_token_060a1f_idx'), models.Index(fields=['created_at'], name='password_re_created_265757_idx')],
            },
        ),
    ]

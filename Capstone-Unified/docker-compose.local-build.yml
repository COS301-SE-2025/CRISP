version: '3.8'

services:
  backend:
    build:
      context: .
      target: production
    restart: always
    env_file:
      - .env.production
    volumes:
      - static_volume:/app/staticfiles/
      - media_volume:/app/media/
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crisp-network

  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crisp-network

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles/
      - media_volume:/app/media/
    depends_on:
      - backend
    networks:
      - crisp-network

networks:
  crisp-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
